for (b in 1:length(allele_cat_tot)) lowmig_equal_alleles[k,b,j] <- round(sum(alleles_cap_equal[allele_cat_tot[[b]]]>0))
for (c in 1:length(allele_cat_tot)) lowmig_prop_alleles[k,c,j] <- round(sum(alleles_cap_prop[allele_cat_tot[[c]]]>0))
##calculation of the high migration percent alleles captured per category in either equal or proportional sampling strategy
##array dims:
#dim 1: replicates of each scenario (100 total)
#dim 2: % of alleles captured in each category (global, globally v common, etc.)
#dim 3: scenarios 1 - 9 (very different population sizes --> equal population sizes)
for (d in 1:length(allele_cat_tot)) lowmig_equal_per[k,d,j] <- round(sum(alleles_cap_equal[allele_cat_tot[[d]]]>0)/length(allele_cat_tot[[d]]),4)
for (e in 1:length(allele_cat_tot)) lowmig_prop_per[k,e,j] <- round(sum(alleles_cap_prop[allele_cat_tot[[e]]]>0)/length(allele_cat_tot[[e]]),4)
}
}
}
##Loop to calculate means over all replicates for allele capture code
#store results in multiple 2D arrays
for(j in 1:length(allele_cat_tot)) {
for (f in 1:length(allele_cat_tot)) {
##Calculate, for the high mig combo, the mean number of alleles per category (from 100 replicates)
highmig_alleles_existing_by_cat[f,j] <-  round(mean(highmig_all_existing_by_sp_reps[,j,f]), digits = 4)
##Calculate the number of alleles in each category captured by each strategy
highmig_equal_mean_all_cap[f,j] <- round(mean(highmig_equal_alleles[,j,f]), 4)
highmig_prop_mean_all_cap[f,j] <- round(mean(highmig_prop_alleles[,j,f]), 4)
##Calculate the percent capture of existing alleles in these categories
highmig_equal_mean_all_cap_per[f,j] <- round(mean(highmig_equal_per[,j,f]), 4)*100
highmig_prop_mean_all_cap_per[f,j] <- round(mean(highmig_prop_per[,j,f]), 4)*100
}
}
##name rows and columns
rownames(highmig_alleles_existing_by_cat) <- c("Scenario 1", "Scenario 2", "Scenario 3", "Scenario 4", "Scenario 5",
"Scenario 6", "scenario 7", "Scenario 8", "Scenario 9")
colnames(highmig_alleles_existing_by_cat) <- list_allele_cat
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\Figures")
write.csv(highmig_alleles_existing_by_cat, "highmig_alleles_existing_by_cat.csv")
##high mig, allelic capture equal sampling strategy data frame
highmig_all_cap_equal_df <- matrix(nrow = length(allele_cat_tot),
ncol = length(allele_cat_tot))
##loop to merge information
for(m in 1:length(highmig_equal_mean_all_cap_per[,1])){
for(n in 1:length(highmig_equal_mean_all_cap_per[,1])){
highmig_all_cap_equal_df[m,n] <- paste0(highmig_equal_mean_all_cap_per[m,n], "%", " ", "(", highmig_equal_mean_all_cap[m,n], ")")
}
}
##name rows and columns
rownames(highmig_all_cap_equal_df) <- c("Scenario 1", "Scenario 2", "Scenario 3", "Scenario 4", "Scenario 5",
"Scenario 6", "scenario 7", "Scenario 8", "Scenario 9")
colnames(highmig_all_cap_equal_df) <- list_allele_cat
##high mig, allelic capture proportional sampling strategy data frame
highmig_all_cap_prop_df <- matrix(nrow = length(allele_cat_tot),
ncol = length(allele_cat_tot))
##loop to merge information
for(o in 1:length(highmig_prop_mean_all_cap_per[,1])){
for(p in 1:length(highmig_prop_mean_all_cap_per[,1])){
highmig_all_cap_prop_df[o,p] <- paste0(highmig_prop_mean_all_cap_per[o,p], "%", " ", "(", highmig_prop_mean_all_cap[o,p], ")")
}
}
##name rows and columns
rownames(highmig_all_cap_equal_df) <- c("Scenario 1", "Scenario 2", "Scenario 3", "Scenario 4", "Scenario 5",
"Scenario 6", "scenario 7", "Scenario 8", "Scenario 9")
colnames(highmig_all_cap_prop_df) <- list_allele_cat
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\Figures")
##write out data frames
write.csv(highmig_all_cap_equal_df, "highmig_all_cap_equal_df.csv")
write.csv(highmig_all_cap_prop_df, "highmig_all_cap_prop_df.csv")
##Loop to calculate means over all replicates for allele capture code
#store results in multiple 2D arrays
for(j in 1:length(allele_cat_tot)) {
for (f in 1:length(allele_cat_tot)) {
##Calculate, for the high mig combo, the mean number of alleles per category (from 100 replicates)
lowmig_alleles_existing_by_cat[f,j] <-  round(mean(lowmig_all_existing_by_sp_reps[,j,f]), 4)
##Calculate the number of alleles in each category captured by each strategy
lowmig_equal_mean_all_cap[f,j] <- round(mean(lowmig_equal_alleles[,j,f]), 4)
lowmig_prop_mean_all_cap[f,j] <- round(mean(lowmig_prop_alleles[,j,f]), 4)
##Calculate the percent capture of existing alleles in these categories
lowmig_equal_mean_all_cap_per[f,j] <- round(mean(lowmig_equal_per[,j,f]), 4)*100
lowmig_prop_mean_all_cap_per[f,j] <- round(mean(lowmig_prop_per[,j,f]), 4)*100
}
}
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\Figures")
write.csv(lowmig_alleles_existing_by_cat, "lowmig_alleles_existing_by_cat.csv")
##name rows and columns
rownames(lowmig_alleles_existing_by_cat) <- c("Scenario 1", "Scenario 2", "Scenario 3", "Scenario 4", "Scenario 5",
"Scenario 6", "scenario 7", "Scenario 8", "Scenario 9")
colnames(lowmig_alleles_existing_by_cat) <- list_allele_cat
####migration data frames to combine # and % of allelic frequencies captured
##low mig equal sampling strategy allelic capture data frame
lowmig_all_cap_equal_df <- matrix(nrow = length(allele_cat_tot),
ncol = length(allele_cat_tot))
##loop to merge information
for(m in 1:length(lowmig_equal_mean_all_cap_per[,1])){
for(n in 1:length(lowmig_equal_mean_all_cap_per[,1])){
lowmig_all_cap_equal_df[m,n] <- paste0(lowmig_equal_mean_all_cap_per[m,n], "%", " ", "(", lowmig_equal_mean_all_cap[m,n], ")")
}
}
##name rows and columns
rownames(lowmig_all_cap_equal_df) <- c("Scenario 1", "Scenario 2", "Scenario 3", "Scenario 4", "Scenario 5",
"Scenario 6", "scenario 7", "Scenario 8", "Scenario 9")
colnames(lowmig_all_cap_equal_df) <- list_allele_cat
##low mig proportional sampling strategy allelic capture data frame
lowmig_all_cap_prop_df <- matrix(nrow = length(allele_cat_tot),
ncol = length(allele_cat_tot))
##loop to merge information
for(o in 1:length(lowmig_prop_mean_all_cap_per[,1])){
for(p in 1:length(lowmig_prop_mean_all_cap_per[,1])){
lowmig_all_cap_prop_df[o,p] <- paste0(lowmig_prop_mean_all_cap_per[o,p], "%", " ", "(", lowmig_prop_mean_all_cap[o,p], ")")
}
}
rownames(lowmig_all_cap_prop_df) <- c("Scenario 1", "Scenario 2", "Scenario 3", "Scenario 4", "Scenario 5",
"Scenario 6", "scenario 7", "Scenario 8", "Scenario 9")
colnames(lowmig_all_cap_prop_df) <- list_allele_cat
##write out data frames
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\Figures")
write.csv(lowmig_all_cap_equal_df, "lowmig_all_cap_equal_df.csv")
write.csv(lowmig_all_cap_prop_df, "lowmig_all_cap_prop_df.csv")
#remove row 1 which was just 0,0 FIX THIS THIS IS MISSING j
for (k in 1:length(j)) freq_v_cap_LM_equal<-freq_v_cap_LM_equal[[k]][-1,-1]; freq_v_cap_LM_prop<-freq_v_cap_LM_prop[[k]][-1,-1]
for (k in 1:length(j)) freq_v_cap_HM_equal<-freq_v_cap_HM_equal[[k]][-1,-1]; freq_v_cap_HM_prop<-freq_v_cap_HM_prop[[k]][-1,-1]
save(freq_v_cap_LM_equal,freq_v_cap_LM_prop,freq_v_cap_HM_equal,freq_v_cap_HM_prop,file="Rosenberger_freq_v_cap.Rdata")
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\R-scripts")
load(file="Rosenberger_freq_v_cap.Rdata")
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\R-scripts")
save(freq_v_cap_LM_equal,freq_v_cap_LM_prop,freq_v_cap_HM_equal,freq_v_cap_HM_prop,file="Rosenberger_freq_v_cap.Rdata")
load(file="Rosenberger_freq_v_cap.Rdata")
for (i in 1:2){
if (i==1) {
this_freq_v_cap_prop<-freq_v_cap_HM_prop; this_freq_v_cap_equal<-freq_v_cap_HM_equal
file_append<-"_HM"
}
if (i==2) {
this_freq_v_cap_prop<-freq_v_cap_LM_prop; this_freq_v_cap_equal<-freq_v_cap_LM_equal
file_append<-"_LM"
}
#########################
# ALLELE FREQS EXISTING
#########################
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink")
pdf(paste0("hist_allele_freqs_scen_1_v_9",file_append,".pdf"),height=5,width=8)
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=500,freq=F)
legend(0.03,30,c("Scenario 1","Scenario 9"),fill=c(c1,c2))
dev.off()
#Interesting side note, the other end of the spectrum Scenario 1 also has more very high frequency alleles, probably in the small pop'ns
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=100,xlim=c(.3,.7),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the right)",ylim=c(0,1))
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=100,freq=F)
#########################
# ALLELE FREQS CAPTURED OR NOT
#########################
#This plot shows that there are more higher frequency alleles NOT captured (0 counts) for scenario 1, when equal sampling v. proportional; the plus/ minus is a neat way to show 'jitter'
plot(this_freq_v_cap_prop[[1]][,1]-.15,this_freq_v_cap_prop[[1]][,2],ylim=c(0,.1),xlim=c(0,10))
abline(lm(this_freq_v_cap_prop[[1]][,2]~this_freq_v_cap_prop[[1]][,1]))
points(this_freq_v_cap_equal[[1]][,1]-.05,this_freq_v_cap_equal[[1]][,2],col="red")
abline(lm(this_freq_v_cap_equal[[1]][,2]~this_freq_v_cap_equal[[1]][,1]),col="red")
points(this_freq_v_cap_prop[[9]][,1]+.05,this_freq_v_cap_prop[[9]][,2],col="darkgrey")
abline(lm(this_freq_v_cap_prop[[9]][,2]~this_freq_v_cap_prop[[9]][,1]),col="darkgrey")
points(this_freq_v_cap_equal[[9]][,1]+.15,this_freq_v_cap_equal[[9]][,2],col="purple")
abline(lm(this_freq_v_cap_equal[[9]][,2]~this_freq_v_cap_equal[[9]][,1]),col="purple")
#This shows that in more detail how more higher frequency alleles are NOT captured
pdf(file=paste0("boxplot_freqs_missed_alleles",file_append,".pdf"),height=8,width=5.5)
boxplot(this_freq_v_cap_equal[[1]][(this_freq_v_cap_equal[[1]][,1])==0,2],this_freq_v_cap_equal[[9]][(this_freq_v_cap_equal[[9]][,1])==0,2],
this_freq_v_cap_prop[[1]][(this_freq_v_cap_prop[[1]][,1])==0,2],this_freq_v_cap_prop[[9]][(this_freq_v_cap_prop[[9]][,1])==0,2],
col=c(rep("lightblue",2),rep("darkblue",2)),names=c("S1, equal","S9, equal","S1, prop","S9, prop"),ylab="Proportion of those alleles NOT sampled")
dev.off()
t.test(this_freq_v_cap_equal[[1]][(this_freq_v_cap_equal[[1]][,1])==0,2],this_freq_v_cap_equal[[9]][(this_freq_v_cap_equal[[9]][,1])==0,2])
# mean of x   mean of y
#0.003172394 0.002118881 		#Almost 50% higher
#  mean of x   mean of y
#0.009902135 0.004192742
hist(this_freq_v_cap_equal[[9]][(this_freq_v_cap_equal[[9]][,1])==0,],breaks=50,col=c2,freq=F)
hist(this_freq_v_cap_equal[[1]][(this_freq_v_cap_equal[[1]][,1])==0,],breaks=50,col=c1,add=T,freq=F)
}
for (i in 1:2){
if (i==1) {
this_freq_v_cap_prop<-freq_v_cap_HM_prop
this_freq_v_cap_equal<-freq_v_cap_HM_equal
file_append<-"_HM"
}
if (i==2) {
this_freq_v_cap_prop<-freq_v_cap_LM_prop
this_freq_v_cap_equal<-freq_v_cap_LM_equal
file_append<-"_LM"
}
#########################
# ALLELE FREQS EXISTING
#########################
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink")
pdf(paste0("hist_allele_freqs_scen_1_v_9",file_append,".pdf"),height=5,width=8)
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=500,freq=F)
legend(0.03,30,c("Scenario 1","Scenario 9"),fill=c(c1,c2))
dev.off()
#Interesting side note, the other end of the spectrum Scenario 1 also has more very high frequency alleles, probably in the small pop'ns
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=100,xlim=c(.3,.7),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the right)",ylim=c(0,1))
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=100,freq=F)
#########################
# ALLELE FREQS CAPTURED OR NOT
#########################
#This plot shows that there are more higher frequency alleles NOT captured (0 counts) for scenario 1, when equal sampling v. proportional; the plus/ minus is a neat way to show 'jitter'
plot(this_freq_v_cap_prop[[1]][,1]-.15,this_freq_v_cap_prop[[1]][,2],ylim=c(0,.1),xlim=c(0,10))
abline(lm(this_freq_v_cap_prop[[1]][,2]~this_freq_v_cap_prop[[1]][,1]))
points(this_freq_v_cap_equal[[1]][,1]-.05,this_freq_v_cap_equal[[1]][,2],col="red")
abline(lm(this_freq_v_cap_equal[[1]][,2]~this_freq_v_cap_equal[[1]][,1]),col="red")
points(this_freq_v_cap_prop[[9]][,1]+.05,this_freq_v_cap_prop[[9]][,2],col="darkgrey")
abline(lm(this_freq_v_cap_prop[[9]][,2]~this_freq_v_cap_prop[[9]][,1]),col="darkgrey")
points(this_freq_v_cap_equal[[9]][,1]+.15,this_freq_v_cap_equal[[9]][,2],col="purple")
abline(lm(this_freq_v_cap_equal[[9]][,2]~this_freq_v_cap_equal[[9]][,1]),col="purple")
#This shows that in more detail how more higher frequency alleles are NOT captured
pdf(file=paste0("boxplot_freqs_missed_alleles",file_append,".pdf"),height=8,width=5.5)
boxplot(this_freq_v_cap_equal[[1]][(this_freq_v_cap_equal[[1]][,1])==0,2],this_freq_v_cap_equal[[9]][(this_freq_v_cap_equal[[9]][,1])==0,2],
this_freq_v_cap_prop[[1]][(this_freq_v_cap_prop[[1]][,1])==0,2],this_freq_v_cap_prop[[9]][(this_freq_v_cap_prop[[9]][,1])==0,2],
col=c(rep("lightblue",2),rep("darkblue",2)),names=c("S1, equal","S9, equal","S1, prop","S9, prop"),ylab="Proportion of those alleles NOT sampled")
dev.off()
t.test(this_freq_v_cap_equal[[1]][(this_freq_v_cap_equal[[1]][,1])==0,2],this_freq_v_cap_equal[[9]][(this_freq_v_cap_equal[[9]][,1])==0,2])
# mean of x   mean of y
#0.003172394 0.002118881 		#Almost 50% higher
#  mean of x   mean of y
#0.009902135 0.004192742
hist(this_freq_v_cap_equal[[9]][(this_freq_v_cap_equal[[9]][,1])==0,],breaks=50,col=c2,freq=F)
hist(this_freq_v_cap_equal[[1]][(this_freq_v_cap_equal[[1]][,1])==0,],breaks=50,col=c1,add=T,freq=F)
}
for (i in 1:2){
if (i==1) {
this_freq_v_cap_prop<-freq_v_cap_HM_prop
this_freq_v_cap_equal<-freq_v_cap_HM_equal
file_append<-"_HM"
}
if (i==2) {
this_freq_v_cap_prop<-freq_v_cap_LM_prop
this_freq_v_cap_equal<-freq_v_cap_LM_equal
file_append<-"_LM"
}
}
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink")
pdf(paste0("hist_allele_freqs_scen_1_v_9",file_append,".pdf"),height=5,width=8)
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\Figures")
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink")
pdf(paste0("hist_allele_freqs_scen_1_v_9",file_append,".pdf"),height=5,width=8)
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=500,freq=F)
hist(this_freq_v_cap_prop[[1]][2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1,2]],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]],[,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][,],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][,],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][,],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
dim(this_freq_v_cap_prop)
this_freq_v_cap_prop
for (i in 1:2){
if (i==1) {
this_freq_v_cap_prop<-freq_v_cap_HM_prop; this_freq_v_cap_equal<-freq_v_cap_HM_equal
file_append<-"_HM"
}
if (i==2) {
this_freq_v_cap_prop<-freq_v_cap_LM_prop; this_freq_v_cap_equal<-freq_v_cap_LM_equal
file_append<-"_LM"
}
}
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\Figures")
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink")
hist(this_freq_v_cap_prop[[1]][,],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
freq_v_cap_HM_equal
describe(this_freq_v_cap_equal)
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=500,freq=F)
legend(0.03,30,c("Scenario 1","Scenario 9"),fill=c(c1,c2))
dev.off()
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink")
pdf(paste0("hist_allele_freqs_scen_1_v_9",file_append,".pdf"),height=5,width=8)
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=500,freq=F)
legend(0.03,30,c("Scenario 1","Scenario 9"),fill=c(c1,c2))
dev.off()
source('~/Morton-REU/samp_pop_sims_bottlenecks/bottleneck_2/R-scripts/all_freq_categories_bottleneck.R', echo=TRUE)
#remove row 1 which was just 0,0 FIX THIS THIS IS MISSING j
for (k in 1:length(j)) freq_v_cap_LM_equal<-freq_v_cap_LM_equal[[k]][-1,-1]; freq_v_cap_LM_prop<-freq_v_cap_LM_prop[[k]][-1,-1]
for (k in 1:length(j)) freq_v_cap_HM_equal<-freq_v_cap_HM_equal[[k]][-1,-1]; freq_v_cap_HM_prop<-freq_v_cap_HM_prop[[k]][-1,-1]
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\R-scripts")
#save(freq_v_cap_LM_equal,freq_v_cap_LM_prop,freq_v_cap_HM_equal,freq_v_cap_HM_prop,file="Rosenberger_freq_v_cap.Rdata")
load(file="Rosenberger_freq_v_cap.Rdata")
for (i in 1:2){
if (i==1) {
this_freq_v_cap_prop<-freq_v_cap_HM_prop; this_freq_v_cap_equal<-freq_v_cap_HM_equal
file_append<-"_HM"
}
if (i==2) {
this_freq_v_cap_prop<-freq_v_cap_LM_prop; this_freq_v_cap_equal<-freq_v_cap_LM_equal
file_append<-"_LM"
}
}
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\Figures")
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink")
pdf(paste0("hist_allele_freqs_scen_1_v_9",file_append,".pdf"),height=5,width=8)
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=500,freq=F)
legend(0.03,30,c("Scenario 1","Scenario 9"),fill=c(c1,c2))
dev.off()
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue") +
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink") +
pdf(paste0("hist_allele_freqs_scen_1_v_9",file_append,".pdf"),height=5,width=8) +
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)") +
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=500,freq=F) +
legend(0.03,30,c("Scenario 1","Scenario 9"),fill=c(c1,c2)) +
dev.off()
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink")
pdf(paste0("hist_allele_freqs_scen_1_v_9",file_append,".pdf"),height=5,width=8) +
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)") +
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=500,freq=F) +
legend(0.03,30,c("Scenario 1","Scenario 9"),fill=c(c1,c2)) +
dev.off()
#Interesting side note, the other end of the spectrum Scenario 1 also has more very high frequency alleles, probably in the small pop'ns
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=100,xlim=c(.3,.7),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the right)",ylim=c(0,1))
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=100,freq=F)
this_freq_v_cap_prop[[1]]
this_freq_v_cap_prop[[2]]
this_freq_v_cap_prop[[]]
3
this_freq_v_cap_prop[[3]]
this_freq_v_cap_prop[[9]]
this_freq_v_cap_prop[[10]]
this_freq_v_cap_prop[1]
this_freq_v_cap_prop[1][[,2]]
this_freq_v_cap_prop[1][[2]]
this_freq_v_cap_prop[1][2]
this_freq_v_cap_prop[1][1]
this_freq_v_cap_prop[1][1,2]
this_freq_v_cap_prop[1][1]
cbind()
#remove row 1 which was just 0,0 FIX THIS THIS IS MISSING j
for (k in 1:length(j)) freq_v_cap_LM_equal<-freq_v_cap_LM_equal[[k]][-1,-1]; freq_v_cap_LM_prop<-freq_v_cap_LM_prop[[k]][-1,-1]
for (k in 1:length(j)) freq_v_cap_HM_equal<-freq_v_cap_HM_equal[[k]][-1,-1]; freq_v_cap_HM_prop<-freq_v_cap_HM_prop[[k]][-1,-1]
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\R-scripts")
#save(freq_v_cap_LM_equal,freq_v_cap_LM_prop,freq_v_cap_HM_equal,freq_v_cap_HM_prop,file="Rosenberger_freq_v_cap.Rdata")
load(file="Rosenberger_freq_v_cap.Rdata")
freq_v_cap_HM_equal
freq_v_cap_HM_equal[1]
freq_v_cap_HM_equal[2]
freq_v_cap_HM_equal[,1]
freq_v_cap_HM_equal[[1]]
freq_v_cap_HM_equal[[0]]
freq_v_cap_HM_equal[[2]]
freq_v_cap_HM_equal[[3]]
freq_v_cap_HM_equal[[4]]
freq_v_cap_HM_equal[4]
freq_v_cap_HM_equal[100]
freq_v_cap_HM_equal[[100]
]
freq_v_cap_HM_equal[[100]]
freq_v_cap_HM_equal[[,]]
freq_v_cap_HM_equal
hist(this_freq_v_cap_prop[[1]],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[1],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[]],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
dim(this_freq_v_cap_prop)
this_freq_v_cap_prop = matrix()
this_freq_v_cap_equal = matrix()
for (i in 1:2){
if (i==1) {
this_freq_v_cap_prop<-freq_v_cap_HM_prop; this_freq_v_cap_equal<-freq_v_cap_HM_equal
file_append<-"_HM"
}
if (i==2) {
this_freq_v_cap_prop<-freq_v_cap_LM_prop; this_freq_v_cap_equal<-freq_v_cap_LM_equal
file_append<-"_LM"
}
#########################
# ALLELE FREQS EXISTING
#########################
#This plot looks at the frequency of all alleles.  There are just more very rare alleles in scenario 1 (one large population)
c1 <- rgb(0,102,204,max = 255, alpha = 80, names = "lt.blue")
c2 <- rgb(255,40,40, max = 255, alpha = 80, names = "lt.pink")
pdf(paste0("hist_allele_freqs_scen_1_v_9",file_append,".pdf"),height=5,width=8)
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=500,xlim=c(0,0.05),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the left)")
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=500,freq=F)
legend(0.03,30,c("Scenario 1","Scenario 9"),fill=c(c1,c2))
dev.off()
#Interesting side note, the other end of the spectrum Scenario 1 also has more very high frequency alleles, probably in the small pop'ns
hist(this_freq_v_cap_prop[[1]][,2],col=c1,breaks=100,xlim=c(.3,.7),freq=F,ylab="Density of occurrences", xlab="allele frequency bin (rarer alleles to the right)",ylim=c(0,1))
hist(this_freq_v_cap_prop[[9]][,2],add=T,col=c2,breaks=100,freq=F)
#########################
# ALLELE FREQS CAPTURED OR NOT
#########################
#This plot shows that there are more higher frequency alleles NOT captured (0 counts) for scenario 1, when equal sampling v. proportional; the plus/ minus is a neat way to show 'jitter'
plot(this_freq_v_cap_prop[[1]][,1]-.15,this_freq_v_cap_prop[[1]][,2],ylim=c(0,.1),xlim=c(0,10))
abline(lm(this_freq_v_cap_prop[[1]][,2]~this_freq_v_cap_prop[[1]][,1]))
points(this_freq_v_cap_equal[[1]][,1]-.05,this_freq_v_cap_equal[[1]][,2],col="red")
abline(lm(this_freq_v_cap_equal[[1]][,2]~this_freq_v_cap_equal[[1]][,1]),col="red")
points(this_freq_v_cap_prop[[9]][,1]+.05,this_freq_v_cap_prop[[9]][,2],col="darkgrey")
abline(lm(this_freq_v_cap_prop[[9]][,2]~this_freq_v_cap_prop[[9]][,1]),col="darkgrey")
points(this_freq_v_cap_equal[[9]][,1]+.15,this_freq_v_cap_equal[[9]][,2],col="purple")
abline(lm(this_freq_v_cap_equal[[9]][,2]~this_freq_v_cap_equal[[9]][,1]),col="purple")
#This shows that in more detail how more higher frequency alleles are NOT captured
pdf(file=paste0("boxplot_freqs_missed_alleles",file_append,".pdf"),height=8,width=5.5)
boxplot(this_freq_v_cap_equal[[1]][(this_freq_v_cap_equal[[1]][,1])==0,2],this_freq_v_cap_equal[[9]][(this_freq_v_cap_equal[[9]][,1])==0,2],
this_freq_v_cap_prop[[1]][(this_freq_v_cap_prop[[1]][,1])==0,2],this_freq_v_cap_prop[[9]][(this_freq_v_cap_prop[[9]][,1])==0,2],
col=c(rep("lightblue",2),rep("darkblue",2)),names=c("S1, equal","S9, equal","S1, prop","S9, prop"),ylab="Proportion of those alleles NOT sampled")
dev.off()
t.test(this_freq_v_cap_equal[[1]][(this_freq_v_cap_equal[[1]][,1])==0,2],this_freq_v_cap_equal[[9]][(this_freq_v_cap_equal[[9]][,1])==0,2])
# mean of x   mean of y
#0.003172394 0.002118881 		#Almost 50% higher
#  mean of x   mean of y
#0.009902135 0.004192742
hist(this_freq_v_cap_equal[[9]][(this_freq_v_cap_equal[[9]][,1])==0,],breaks=50,col=c2,freq=F)
hist(this_freq_v_cap_equal[[1]][(this_freq_v_cap_equal[[1]][,1])==0,],breaks=50,col=c1,add=T,freq=F)
}
this_freq_v_cap_prop = matrix()
this_freq_v_cap_equal = matrix()
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\R-scripts")
#save(freq_v_cap_LM_equal,freq_v_cap_LM_prop,freq_v_cap_HM_equal,freq_v_cap_HM_prop,file="Rosenberger_freq_v_cap.Rdata")
load(file="Rosenberger_freq_v_cap.Rdata")
this_freq_v_cap_prop = matrix()
this_freq_v_cap_equal = matrix()
for (i in 1:2){
if (i==1) {
this_freq_v_cap_prop<-freq_v_cap_HM_prop; this_freq_v_cap_equal<-freq_v_cap_HM_equal
file_append<-"_HM"
}
if (i==2) {
this_freq_v_cap_prop<-freq_v_cap_LM_prop; this_freq_v_cap_equal<-freq_v_cap_LM_equal
file_append<-"_LM"
}
}
dim(this_freq_v_cap_prop)
head(this_freq_v_cap_prop)
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims_bottlenecks\\bottleneck_2\\R-scripts")
#save(freq_v_cap_LM_equal,freq_v_cap_LM_prop,freq_v_cap_HM_equal,freq_v_cap_HM_prop,file="Rosenberger_freq_v_cap.Rdata")
load(file="Rosenberger_freq_v_cap.Rdata")
this_freq_v_cap_prop = matrix()
this_freq_v_cap_equal = matrix()
for (i in 1:2){
if (i==1) {
this_freq_v_cap_prop<-freq_v_cap_HM_prop; this_freq_v_cap_equal<-freq_v_cap_HM_equal
file_append<-"_HM"
}
if (i==2) {
this_freq_v_cap_prop<-freq_v_cap_LM_prop; this_freq_v_cap_equal<-freq_v_cap_LM_equal
file_append<-"_LM"
}
}
dim(this_freq_v_cap_prop)
#library functions
library(adegenet)
library(car)
library(diveRsity)
library(ggplot2)
library(ggpubr)
library(ggsignif)
library(tidyr)
#set working directory and load in data
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims\\R scripts")
load("results_highMig_highSamp.Rdata")
#set working directory and load in data
setwd("C:\\Users\\kayle\\Documents\\Morton-REU\\samp_pop_sims\\R-scripts")
load("results_highMig_highSamp.Rdata")
load("results_lowMig_highSamp.Rdata")
load("results_highMig_lowSamp.Rdata")
load("results_lowMig_lowSamp.Rdata")
load("combined_dataframes.Rdata")
#list of combinations
#combination sub-folder directories
combinations = c("\\highMig_highSamp", "\\lowMig_highSamp", "\\highMig_lowsamp", "\\lowMig_lowSamp")
#list of scenarios
#simulation sub-folder directories
scenarios = c("\\scen1",
"\\scen2",
"\\scen3",
"\\scen4",
"\\scen5",
"\\scen6",
"\\scen7",
"\\scen8",
"\\scen9")
#1: High migration high sampling plot
#scenario on x-axis, proportion of alleles on y-axis
#color of boxplots indicates which strategy was used
p = ggplot(combined_highMig_highSamp, aes(x=factor(scenario), y=prop_all, fill=strategy)) +
geom_boxplot() +
stat_compare_means(label = "p.signif", hide.ns = TRUE, label.y = c(0.96,0.97,0.98,0.98,0.985)) + #this code gives the stars *** indicating significance values
ggtitle("High migration high sampling intensity") + # this and next three lines are titles and labels
xlab("Scenarios") +
ylab("Proportion of alleles captured") +
labs(color = "Scenario", fill = "Sample strategy") +
ylim(0.80,1) + #defining limits for the y-axis
scale_fill_brewer() + #this and next line are design elements
theme_bw()
p + theme(axis.text = element_text(size = 11, face = "bold"), axis.title = element_text(size = 14)) #this line will display/create the plot, along with making the font larger
