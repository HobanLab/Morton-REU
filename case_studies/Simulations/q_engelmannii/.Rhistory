levels(butternutgen_reorg@pop) <- butternut_24pop_names
##calculate poppr
butternut_24pop_poppr <- poppr(butternutgen_reorg)
##get distance to range edge for each pop
dist_edge_df <- read.csv(paste0(dist_edge_path, "dist_edge_df.csv"))
##############################################################
#################### Load Genetic Files  #####################
##############################################################
butternut_reorg_allrich <- colSums(allelic.richness(butternutgen_reorg)$Ar)/length(butternutgen_reorg@loc.n.all)
View(dist_edge_df)
##create df with allelic richness and distance
all_rich_dist_df <- data.frame(dist_edge_df[,4], butternut_reorg_allrich,dist_edge_df[,5])
View(all_rich_dist_df)
colnames(all_rich_dist_df) <- c("Distance", "Allelic_Richness", "Col")
rownames(all_rich_dist_df) <- butternut_24pop_names
View(all_rich_dist_df)
###now calculate regressions - linear
allrich_lm <- lm(all_rich_dist_df[,2]~all_rich_dist_df[,1])
allrich_lm_sum <- summary(allrich_lm)
allrich_lm_sum
##reduced data frame
allrich_red <- all_rich_dist_df[-c("WWI","WHWI","CNF"),]
all_rich_dist_df["WWI",]
all_rich_dist_df[c("WWI",WHWI),]
all_rich_dist_df[c("WWI","WHWI"),]
all_rich_dist_df[c("WWI","WHWI","CNF"),]
all_rich_dist_df[-c("WWI","WHWI","CNF"),]
all_rich_dist_df[-all_rich_dist_df[c("WWI","WHWI","CNF"),],]
all_rich_dist_df[c("WWI","WHWI","CNF")]
all_rich_dist_df[c("WWI","WHWI","CNF"),]
##reduce data frame
red_list <- all_rich_dist_df[c("WWI","WHWI","CNF"),]
all_rich_dist_df[-red_list,]
all_rich_dist_df[-c(red_list),]
all_rich_dist_df[23,]
all_rich_dist_df[22,]
all_rich_dist_df[16,]
##reduced data frame
allrich_red <- all_rich_dist_df[-c(16,22,23),]
##Reduced data frame
allrich_red_lm <- lm(allrich_red[,2]~allrich_red[,1])
allrich_red_lm_sum <- summary(allrich_red_lm)
##create r2 and p for full df
linear_allrich_dist_r2 <- allrich_lm_sum$adj.r.squared
linear_allrich_dist_coef <- allrich_lm_sum$coefficients
linear_allrich_dist_pvalue <- linear_allrich_dist_coef[2,4]
linear_allrich_dist_rp <- vector('expression',2)
linear_allrich_dist_rp[1] <- substitute(expression(italic(R)^2 == MYVALUE),
list(MYVALUE = format(linear_allrich_dist_r2,dig=3)))[2]
linear_allrich_dist_rp[2] <- substitute(expression(italic(p) == MYOTHERVALUE),
list(MYOTHERVALUE = format(linear_allrich_dist_pvalue, digits = 2)))[2]
##create r2 and p for full df
linear_allrich_dist_r2 <- allrich_lm_sum$adj.r.squared
linear_allrich_dist_coef <- allrich_lm_sum$coefficients
linear_allrich_dist_pvalue <- linear_allrich_dist_coef[2,4]
linear_allrich_dist_rp <- vector('expression',2)
linear_allrich_dist_rp[1] <- substitute(expression(italic(R)^2 == MYVALUE),
list(MYVALUE = format(linear_allrich_dist_r2,dig=3)))[2]
linear_allrich_dist_rp[2] <- substitute(expression(italic(p) == MYOTHERVALUE),
list(MYOTHERVALUE = format(linear_allrich_dist_pvalue, digits = 2)))[2]
##create r2 and p for reduced df
linear_allrich_dist_red_r2 <- allrich_red_lm_sum$adj.r.squared
linear_allrich_dist_red_coef <- allrich_red_lm_sum$coefficients
linear_allrich_dist_red_pvalue <- linear_allrich_dist_red_coef[2,4]
linear_allrich_dist_red_rp <- vector('expression',2)
linear_allrich_dist_red_rp[1] <- substitute(expression(italic(R)^2 == MYVALUE),
list(MYVALUE = format(linear_allrich_dist_red_r2,dig=3)))[2]
linear_allrich_dist_red_rp[2] <- substitute(expression(italic(p) == MYOTHERVALUE),
list(MYOTHERVALUE = format(linear_allrich_dist_red_pvalue, digits = 2)))[2]
plot(butternut_all_rich_dist_df[,2]~butternut_all_rich_dist_df[,1],
col = butternut_all_rich_dist_df[,3], pch = 17,
ylab = "Number of Alleles", xlab = "Distance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/80), ylim = c(5,10), xlim = c(0,550),
main = "Number of Alleles Compared with Distance to Range Edge (km)")
plot(all_rich_dist_df[,2]~all_rich_dist_df[,1],
col = butternut_all_rich_dist_df[,3], pch = 17,
ylab = "Number of Alleles", xlab = "Distance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/80), ylim = c(5,10), xlim = c(0,550),
main = "Number of Alleles Compared with Distance to Range Edge (km)")
View(all_rich_dist_df)
plot(all_rich_dist_df[,2]~all_rich_dist_df[,1],
col = all_rich_dist_df[,3], pch = 17,
ylab = "Number of Alleles", xlab = "Distance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/80), ylim = c(5,10), xlim = c(0,600),
main = "Number of Alleles Compared with Distance to Range Edge (km)")
text(all_rich_dist_df[,2]~all_rich_dist_df[,1],
labels = butternut_24pop_names, cex = 0.8, pos = 1)
abline(allrich_lm, col = "dodgerblue4")
abline(allrich_red_lm, col = "darkorchid")
legend('bottom', legend = c("New Brunswick", "Ontario", "United States"), pch = 17, col = c("firebrick1", "firebrick4","dodgerblue"))
##legends
legend('topleft', legend = linear_allrich_dist_rp, pch = 4, col = "dodgerblue4",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottomleft', legend = linear_allrich_dist_red_rp, pch = 4,
col = "darkorchid",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
##Allelic Richness Distance
pdf(paste0(dist_edge_path, "linear_allrich_dist.pdf"), width = 8, height = 6)
plot(all_rich_dist_df[,2]~all_rich_dist_df[,1],
col = all_rich_dist_df[,3], pch = 17,
ylab = "Number of Alleles", xlab = "Distance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/80), ylim = c(5,10), xlim = c(0,600),
main = "Number of Alleles Compared with Distance to Range Edge (km)")
text(all_rich_dist_df[,2]~all_rich_dist_df[,1],
labels = butternut_24pop_names, cex = 0.8, pos = 1)
abline(allrich_lm, col = "dodgerblue4")
abline(allrich_red_lm, col = "darkorchid")
##legends
legend('topleft', legend = linear_allrich_dist_rp, pch = 4, col = "dodgerblue4",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottomleft', legend = linear_allrich_dist_red_rp, pch = 4,
col = "darkorchid",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottom', legend = c("New Brunswick", "Ontario", "United States"), pch = 17, col = c("firebrick1", "firebrick4","dodgerblue"))
dev.off()
##################################################################
################## Calculate Quadratic Models ####################
##################################################################
####dist
points <- all_rich_dist_df[,1]
points2 <- points^2
all_rich_dist_df[,1]
###Quadratic linear model
quad_allrich_dist_lm <-lm(all_rich_dist_df[,2] ~
points + points2)
###Quadratic linear model
quad_allrich_dist_lm <-lm(all_rich_dist_df[,2] ~
points + points2)
##Set up model
quad_allrich_dist_lm_sum <- summary(quad_allrich_dist_lm)
#pointsance models
points_values <- seq(0, 600, 5)
points_counts <- predict(quad_allrich_dist_lm,
list(points=points_values,
points2=points_values^2))
###pointsance without wisconsin populations
points_21 <- allrich_red[,1]
points2_21 <- allrich_red[,1]^2
###pointsance without wisconsin populations
points_21 <- allrich_red[,1]
points2_21 <- allrich_red[,1]^2
##reduced df quadratic regression
quad_allrich_dist_red_lm <-lm(allrich_red[,2] ~
points_21 + points2_21)
quad_allrich_dist_red_lm_sum <- summary(quad_allrich_dist_red_lm)
##values and pointsance
points_values_21 <- seq(0, 600, 5)
points_counts_21 <- predict(quadratic_21pops_model_lm,list(points_21=points_values_21, points2_21=points_values_21^2))
##make lines
points_values_21 <- seq(0, 600, 5)
points_counts_21 <- predict(quad_allrich_dist_red_lm,
list(points_21=points_values_21,
points2_21=points_values_21^2))
plot(all_rich_dist_df[,2]~all_rich_dist_df[,1], col = all_rich_dist_df[,3],
pch = 17,
main = "Allelic Richness Compared to Distance to Range Edge (km)",
ylab = "Allelic Richness",
xlab = "pointsance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/100), ylim = c(5,10),
xlim = c(0,600))
text(all_rich_dist_df[,2]~all_rich_dist_df[,1], labels = butternut_24pop_names,
cex = 0.8, pos = 1)
lines(points_values, points_counts, col = "darkslategray2", lwd = 3)
lines(points_values_21, points_counts_21, col = "darkseagreen4", lwd = 3)
##legends
legend('topleft', legend = linear_allrich_dist_rp, pch = 4, col = "dodgerblue4",
title = "Regression with WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottomleft', legend = linear_allrich_dist_red_rp, pch = 4,
col = "darkorchid", title = "Regression without WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
##Allelic Richness Distance
pdf(paste0(dist_edge_path, "linear_allrich_dist.pdf"), width = 8, height = 6)
plot(all_rich_dist_df[,2]~all_rich_dist_df[,1],
col = all_rich_dist_df[,3], pch = 17,
ylab = "Number of Alleles", xlab = "Distance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/80), ylim = c(5,10), xlim = c(0,600),
main = "Number of Alleles Compared with Distance to Range Edge (km)")
text(all_rich_dist_df[,2]~all_rich_dist_df[,1],
labels = butternut_24pop_names, cex = 0.8, pos = 1)
abline(allrich_lm, col = "dodgerblue4")
abline(allrich_red_lm, col = "darkorchid")
##legends
legend('topleft', legend = linear_allrich_dist_rp, pch = 4, col = "dodgerblue4",
title = "Regression with WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottomleft', legend = linear_allrich_dist_red_rp, pch = 4,
col = "darkorchid", title = "Regression without WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottom', legend = c("New Brunswick", "Ontario", "United States"), pch = 17, col = c("firebrick1", "firebrick4","dodgerblue"))
dev.off()
##plot code
plot(all_rich_dist_df[,2]~all_rich_dist_df[,1], col = all_rich_dist_df[,3],
pch = 17,
main = "Allelic Richness Compared to Distance to Range Edge (km)",
ylab = "Allelic Richness",
xlab = "pointsance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/100), ylim = c(5,10),
xlim = c(0,600))
##add pop names
text(all_rich_dist_df[,2]~all_rich_dist_df[,1], labels = butternut_24pop_names,
cex = 0.8, pos = 1)
##draw regression lines
lines(points_values, points_counts, col = "darkslategray2", lwd = 3)
lines(points_values_21, points_counts_21, col = "darkseagreen4", lwd = 3)
##create r2 and p for full df
quad_allrich_dist_r2 <- quad_allrich_dist_lm_sum$adj.r.squared
quad_allrich_dist_coef <- quad_allrich_dist_lm_sum$coefficients
quad_allrich_dist_pvalue <- quad_allrich_dist_coef[2,4]
quad_allrich_dist_rp <- vector('expression',2)
quad_allrich_dist_rp[1] <- substitute(expression(italic(R)^2 == MYVALUE),
list(MYVALUE = format(quad_allrich_dist_r2,dig=3)))[2]
quad_allrich_dist_rp[2] <- substitute(expression(italic(p) == MYOTHERVALUE),
list(MYOTHERVALUE = format(quad_allrich_dist_pvalue, digits = 2)))[2]
##create r2 and p for reduced df
quad_allrich_dist_red_r2 <- quad_allrich_dist_red_lm_sum$adj.r.squared
quad_allrich_dist_red_coef <- quad_allrich_dist_red_lm_sum$coefficients
quad_allrich_dist_red_pvalue <- quad_allrich_dist_red_coef[2,4]
quad_allrich_dist_red_rp <- vector('expression',2)
quad_allrich_dist_red_rp[1] <- substitute(expression(italic(R)^2 == MYVALUE),
list(MYVALUE = format(quad_allrich_dist_red_r2,dig=3)))[2]
quad_allrich_dist_red_rp[2] <- substitute(expression(italic(p) == MYOTHERVALUE),
list(MYOTHERVALUE = format(quad_allrich_dist_red_pvalue, digits = 2)))[2]
##legends
legend('topleft', legend = quad_allrich_dist_rp, pch = 4, col = "darkslategray2",
title = "Regression with WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
quad_allrich_dist_lm_sum
quad_allrich_dist_r2
quad_allrich_dist_pvalue
quad_allrich_dist_coef <- quad_allrich_dist_lm_sum$coefficients
quad_allrich_dist_coef
quad_allrich_dist_coef[2,4]
quad_allrich_dist_rp[2] <- substitute(expression(italic(p) == MYOTHERVALUE),
list(MYOTHERVALUE = format(0.36, digits = 2)))[2]
##legends
legend('topleft', legend = quad_allrich_dist_rp, pch = 4, col = "darkslategray2",
title = "Regression with WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
##plot code
plot(all_rich_dist_df[,2]~all_rich_dist_df[,1], col = all_rich_dist_df[,3],
pch = 17,
main = "Allelic Richness Compared to Distance to Range Edge (km)",
ylab = "Allelic Richness",
xlab = "pointsance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/100), ylim = c(5,10),
xlim = c(0,600))
##add pop names
text(all_rich_dist_df[,2]~all_rich_dist_df[,1], labels = butternut_24pop_names,
cex = 0.8, pos = 1)
##draw regression lines
lines(points_values, points_counts, col = "darkslategray2", lwd = 3)
lines(points_values_21, points_counts_21, col = "darkseagreen4", lwd = 3)
##legends
legend('topleft', legend = quad_allrich_dist_rp, pch = 4, col = "darkslategray2",
title = "Regression with WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
quad_allrich_dist_red_rp
legend('bottom', legend = c("New Brunswick", "Ontario", "United States"),
pch = 17, col = c("firebrick1", "firebrick4","dodgerblue"))
legend('bottomleft', legend = linear_allrich_dist_red_rp, pch = 4,
col = "darkorchid", title = "Regression without WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
##plot code
plot(all_rich_dist_df[,2]~all_rich_dist_df[,1], col = all_rich_dist_df[,3],
pch = 17,
main = "Allelic Richness Compared to Distance to Range Edge (km)",
ylab = "Allelic Richness",
xlab = "pointsance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/100), ylim = c(5,10),
xlim = c(0,600))
##add pop names
text(all_rich_dist_df[,2]~all_rich_dist_df[,1], labels = butternut_24pop_names,
cex = 0.8, pos = 1)
##draw regression lines
lines(points_values, points_counts, col = "darkslategray2", lwd = 3)
lines(points_values_21, points_counts_21, col = "darkseagreen4", lwd = 3)
##legends
legend('topleft', legend = quad_allrich_dist_rp, pch = 4, col = "darkslategray2",
title = "Regression with WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottomleft', legend = quad_allrich_dist_red_rp, pch = 4,
col = "darkslategray2", title = "Regression without WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottomleft', legend = quad_allrich_dist_red_rp, pch = 4,
col = "darkseagreen4", title = "Regression without WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottom', legend = c("New Brunswick", "Ontario", "United States"),
pch = 17, col = c("firebrick1", "firebrick4","dodgerblue"))
##points
pdf(paste0(dist_edge_path, "quadratic_allrich_dist.pdf"), width = 8, height = 6,)
##plot code
plot(all_rich_dist_df[,2]~all_rich_dist_df[,1], col = all_rich_dist_df[,3],
pch = 17,
main = "Allelic Richness Compared to Distance to Range Edge (km)",
ylab = "Allelic Richness",
xlab = "pointsance to Range Edge (km)",
cex = (butternut_24pop_poppr[1:24,2]/100), ylim = c(5,10),
xlim = c(0,600))
##add pop names
text(all_rich_dist_df[,2]~all_rich_dist_df[,1], labels = butternut_24pop_names,
cex = 0.8, pos = 1)
##draw regression lines
lines(points_values, points_counts, col = "darkslategray2", lwd = 3)
lines(points_values_21, points_counts_21, col = "darkseagreen4", lwd = 3)
##legends
legend('topleft', legend = quad_allrich_dist_rp, pch = 4, col = "darkslategray2",
title = "Regression with WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottomleft', legend = quad_allrich_dist_red_rp, pch = 4,
col = "darkseagreen4", title = "Regression without WI",
bty = 'n', border = "black", pt.cex = 1, cex = 0.8)
legend('bottom', legend = c("New Brunswick", "Ontario", "United States"),
pch = 17, col = c("firebrick1", "firebrick4","dodgerblue"))
dev.off()
#####################################
############ Directories ############
#####################################
ten_oaks_path <- "G:\\My Drive\\Hoban_Lab_Docs\\Projects\\Ten_Oaks\\Labwork\\Data Collection\\genind_files\\"
ten_oaks_shared <- "G:\\Shared drives\\Emily_Schumacher\\ten_oaks_gen\\"
library(diveRsity)
library(adegenet)
library(stringr)
library(tidyr)
library(hierfstat)
library(poppr)
library(Demerelate)
library(rworldmap)
library(data.table)
library(ggplot2)
library(ggrepel)
library(geosphere)
library(plotrix)
library(ggpmisc)
library(factoextra)
library(GISTools)
library(raster)
library(rgdal)
library(sp)
#######################################
############ load in files ############
#######################################
setwd(ten_oaks_path)
ten_oaks_list <- list.files(pattern = ".arp$")
length(ten_oaks_list)
#######################################
############ load in files ############
#######################################
setwd(ten_oaks_path)
##list out arp files
ten_oaks_list <- list.files(pattern = ".arp$")
##write out loop
ten_oaks_genind_list <- list()
for(o in 1:length(ten_oaks_list)){
ten_oaks_genind_list[[o]] <- arp2gen(ten_oaks_list[[o]])
}
paste0(ten_oaks_path, ten_oaks_list[[1]])
##list out arp files
ten_oaks_list <- list.files(pattern = ".arp$")
##write out loop
ten_oaks_genind_list <- list()
for(o in 1:length(ten_oaks_list)){
ten_oaks_genind_list[[o]] <- arp2gen(paste0(ten_oaks_path, ten_oaks_list[[o]]))
}
ten_oaks_list[[1]]
##write out loop
ten_oaks_genind_list <- list()
1:length(ten_oaks_list)
for(o in 1:length(ten_oaks_list)){
arp2gen(paste0(ten_oaks_path, ten_oaks_list[[o]]))
}
ten_oaks_list
arp2gen(paste0(ten_oaks_path, ten_oaks_list[[1]]))
arp2gen(ten_oaks_list[[1]]))
arp2gen(ten_oaks_list[[1]])
library(diveRsity)
arp2gen
?arp2gen
arp2gen("G:\\My Drive\\Hoban_Lab_Docs\\Projects\\Ten_Oaks\\Labwork\\Data Collection\\genind_files\\quaj_gardenwild.arp")
#######################################
############ load in files ############
#######################################
setwd(ten_oaks_path)
##list out arp files
ten_oaks_list <- list.files(pattern = ".arp$")
for(o in 1:length(ten_oaks_list)){
ten_oaks_genind_list[[o]] <- arp2gen(paste0(ten_oaks_path, ten_oaks_list[[o]]))
}
for(o in 1:length(ten_oaks_list)){
ten_oaks_genind_list[[o]] <- arp2gen(paste0(ten_oaks_path, ten_oaks_list[[o]]))
}
##other data files for pwfst
quac_gen_df <- read.csv("G:\\My Drive\\Hoban_Lab_Docs\\Projects\\Ten_Oaks\\Labwork\\Data Collection\\Scores_Binning\\QUAC_scores_10_26_20.csv")
quaj_gen_df <- read.csv("G:\\My Drive\\Hoban_Lab_Docs\\Projects\\Ten_Oaks\\Labwork\\Data Collection\\Scores_Binning\\QUAJ_scores_10_26_20.csv")
##write in genind files
ten_oaks_genind_list <- list()
##write in genind files
ten_oaks_genind_list <- list.files(".gen$")
ten_oaks_genind_list
##write in genind files
ten_oaks_genind_list <- list.files(pattern = ".gen$")
##
genind_list <- list()
for(o in 1:length(ten_oaks_genind_list)){
genind_list[[o]] <- read.genepop(ten_oaks_genind_list[[o]], ncode = 3)
}
for(o in 1:length(ten_oaks_genind_list)){
genind_list[[o]] <- read.genepop(ten_oaks_genind_list[[o]], ncode = 3)
}
genind_list[[1]]
head(genind_list[[1]]@tab)
##rename ind files
rownames(genind_list[[1]]@tab) <- quac_gen_df$Ind
rownames(genind_list[[1]]@tab)
rownames(genind_list[[2]]@tab) <- quaj_gen_df$Ind
ten_oak_poppr <- poppr(genind_list)
quac_poppr <- poppr(genind_list[[1]])
quaj_poppr <- poppr(genind_list[[2]])
##graph hexp
boxplot(quac_poppr[1:2, 10])
quac_poppr[1:2, 10]
quac_poppr[,10]
##graph hexp
plot(quac_poppr[,10]~quac_poppr[,2])
##graph hexp
plot(quac_poppr[1:2,10]~quac_poppr[1:2,2], ylim = c(0.58,0.62))
View(quac_poppr)
##calculate allelic richnes
quac_allrich <-colSums(allelic.richness(genind_list[[1]])$Ar)/length(genind_list[[1]]@loc.n.all)
quac_allrich
quaj_allrich <- colSums(allelic.richness(genind_list[[2]])$Ar)/length(genind_list[[2]]@loc.n.all)
quaj_allrich
##pwfst
quac_pwfst <- as.matrix(pairwise.neifst(quac_gen_df))
pairwise.neifst(quac_gen_df)
View(quac_gen_df)
pairwise.neifst(quac_gen_df[3:32])
?pairwise.neifst
##remove individuals based on missing data
quac_nomd <- missingno(genind_list[[1]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
quaj_nomd <- missingno(genind_list[[2]], type = "geno", cutoff = 0.25, quiet = FALSE, freq = FALSE)
###########################################################
################## Genetic Diversity Analyses #############
###########################################################
##create poppr files
quac_poppr <- poppr(quac_nomd)
quaj_poppr <- poppr(quaj_nomd)
quac_poppr[,10]
###########################################################
################## Genetic Diversity Analyses #############
###########################################################
##create poppr files
quac_poppr <- poppr(quac_nomd)
quaj_poppr <- poppr(quaj_nomd)
quac_poppr
quaj_poppr
##calculate allelic richnes
quac_allrich <- colSums(allelic.richness(quac_nomd)$Ar)/length(genind_list[[1]]@loc.n.all)
quaj_allrich <- colSums(allelic.richness(quaj_nomd)$Ar)/length(genind_list[[2]]@loc.n.all)
quac_allrich
quaj_allrich
rownames(quac_nomd@tab)
##remove individuals based on name
quac_df_nomd <- quac_gen_df[!rownames(quac_nomd@tab) %in% quac_gen_df$Ind,]
rownames(quac_nomd@tab)
##remove individuals based on name
quac_df_nomd <- quac_gen_df$Ind[!rownames(quac_nomd@tab) %in% quac_gen_df$Ind,]
##remove individuals based on name
quac_df_nomd <- quac_gen_df[!rownames(quac_nomd@tab) %in% quac_gen_df$Ind,]
##remove individuals based on name
quac_df_nomd <- quac_gen_df[rownames(quac_nomd@tab) %in% quac_gen_df$Ind,]
quac_nomd
##remove individuals based on name
quac_df_nomd <- quac_gen_df[quac_gen_df$Ind %in% rownames(quac_nomd@tab),]
pairwise.neifst(quac_df_nomd)
pairwise.neifst(quac_df_nomd[3:32])
##pwfst
quac_pwfst <- as.matrix(pairwise.neifst(quac_df_nomd[,3:32]))
max(quac_pwfst)
min
min(quac_pwfst)
max(quac_pwfst, na.rm = TRUE)
min(quac_pwfst, na.rm = TRUE)
library(adegenet)
library(diveRsity)
library(hierfstat)
quen_case_studies <- "C:\\Users\\eschumacher\\Documents\\GitHub\\Morton-REU\\case_studies\\Simulations\\q_engelmannii\\"
quen_case_studies <- "C:\\Users\\eschumacher\\Documents\\GitHub\\Morton-REU\\case_studies\\Simulations\\q_engelmannii\\"
setwd(quen_case_studies)
##import files
quen_list <- list.files(".gen$")
##import files
quen_list <- list.files(pattern = ".gen$")
##create list
quen_genind_list <- list()
##run loop
for(i in 1:length(quen_list)) {
quen_genind_list[[i]] <- read.genepop(quen_list[[i]], ncode=3)
}
quen_genind_list[[1]]
table(quen_genind_list@pop)
table(quen_genind_list[[1@pop)
table(quen_genind_list[[1]]@pop)
levels(quen_genind_list[[1]]@pop)
length(levels(quen_genind_list[[1]]@pop))
length(quen_genind_list)
######################################
########## Calculate PW Fst ##########
######################################
##create array
quen_array <- array(dim = c(length(levels(quen_genind_list[[1]]@pop)),length(levels(quen_genind_list[[1]]@pop)),
length(quen_genind_list)))
